/**
 * common.h
 *
 * Copyright (c) 2017 endaaman
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file for details.
 */

#ifndef COMMON_H
#define COMMON_H

#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include <assert.h>
#include <lua.h>
#include <lualib.h>
#include <lauxlib.h>
#include <gtk/gtk.h>
#include <vte/vte.h>
#define PCRE2_CODE_UNIT_WIDTH 8
#include <pcre2.h>

#include "../app-config.h"

#define __PRE_IDENTITY(x) #x
#define __IDENTITY(x) __PRE_IDENTITY(x)
#define TYM_VTE_VERSION __IDENTITY(VTE_MAJOR_VERSION) "." __IDENTITY(VTE_MINOR_VERSION) "." __IDENTITY(VTE_MICRO_VERSION)

#ifdef DEBUG
#define TYM_APP_ID "me.endaaman.tym_dev"
#define TYM_APP_ID_ISOLATED "me.endaaman.tym_isolated_dev"
#define TYM_OBJECT_PATH_BASE "/me/endaaman/tym_dev"
#else
#define TYM_APP_ID "me.endaaman.tym"
#define TYM_APP_ID_ISOLATED "me.endaaman.tym_isolated"
#define TYM_OBJECT_PATH_BASE "/me/endaaman/tym"
#endif

#define TYM_OBJECT_PATH_FMT_INT TYM_OBJECT_PATH_BASE"%d"
#define TYM_OBJECT_PATH_FMT_STR TYM_OBJECT_PATH_BASE"%s"

#define TYM_ERROR_INVALID_METHOD_CALL 0

#define TYM_CONFIG_DIR_NAME "tym"
#define TYM_CONFIG_FILE_NAME "config.lua"
#define TYM_THEME_FILE_NAME "theme.lua"
#define TYM_SYMBOL_NONE "NONE"
#define TYM_FALL_BACK_SHELL "/bin/sh"
#define TYM_SYMBOL_WILDCARD "*"

#define TYM_CURSOR_SHAPE_BLOCK "block"
#define TYM_CURSOR_SHAPE_IBEAM "ibeam"
#define TYM_CURSOR_SHAPE_UNDERLINE "underline"
#define TYM_CURSOR_BLINK_MODE_SYSTEM "system"
#define TYM_CURSOR_BLINK_MODE_ON "on"
#define TYM_CURSOR_BLINK_MODE_OFF "off"
#define TYM_CJK_WIDTH_NARROW "narrow"
#define TYM_CJK_WIDTH_WIDE "wide"

#define TYM_CLIPBOARD_CLIPBOARD "clipborad"
#define TYM_CLIPBOARD_PRIMARY "primary"
#define TYM_CLIPBOARD_SECONDARY "secondary"

#define TYM_DEFAULT_TITLE "tym"
#define TYM_DEFAULT_ICON "utilities-terminal"
#define TYM_DEFAULT_TERM "xterm-256color"
#define TYM_DEFAULT_CURSOR_SHAPE TYM_CURSOR_SHAPE_BLOCK
#define TYM_DEFAULT_CURSOR_BLINK_MODE TYM_CURSOR_BLINK_MODE_SYSTEM
#define TYM_DEFAULT_CJK TYM_CJK_WIDTH_NARROW
#define TYM_DEFAULT_URI_SCHEMES "http https file mailto"
extern const int TYM_DEFAULT_WIDTH;
extern const int TYM_DEFAULT_HEIGHT;
extern const int TYM_DEFAULT_SCALE;
extern const int TYM_DEFAULT_CELL_SIZE;
extern const int TYM_DEFAULT_SCROLLBACK;

/* theme: iceberg (https://cocopon.github.io/iceberg.vim/) */
#define TYM_DEFAULT_COLOR_0  "#161821"
#define TYM_DEFAULT_COLOR_1  "#e27878"
#define TYM_DEFAULT_COLOR_2  "#b4be82"
#define TYM_DEFAULT_COLOR_3  "#e2a478"
#define TYM_DEFAULT_COLOR_4  "#84a0c6"
#define TYM_DEFAULT_COLOR_5  "#a093c7"
#define TYM_DEFAULT_COLOR_6  "#89b8c2"
#define TYM_DEFAULT_COLOR_7  "#c6c8d1"
#define TYM_DEFAULT_COLOR_8  "#6b7089"
#define TYM_DEFAULT_COLOR_9  "#e98989"
#define TYM_DEFAULT_COLOR_10 "#c0ca8e"
#define TYM_DEFAULT_COLOR_11 "#e9b189"
#define TYM_DEFAULT_COLOR_12 "#91acd1"
#define TYM_DEFAULT_COLOR_13 "#ada0d3"
#define TYM_DEFAULT_COLOR_14 "#95c4ce"
#define TYM_DEFAULT_COLOR_15 "#d2d4de"
#define TYM_DEFAULT_COLOR_BACKGROUND TYM_DEFAULT_COLOR_0
#define TYM_DEFAULT_COLOR_FOREGROUND TYM_DEFAULT_COLOR_7

#define UNUSED(x) (void)(x)
#define BUILD_DATE "@DATE@"


/* compat definition */
#ifndef LUA_LOADED_TABLE
#define LUA_LOADED_TABLE "_LOADED"
#endif

/* use g_memdup2 if glib >= 2.66 */
#if GLIB_CHECK_VERSION(2, 66, 0)
#define memdup g_memdup2
#else
#define memdup g_memdup
#endif

/* Switch to use old api */
/* #define TYM_USE_OLD_API */
#ifndef TYM_USE_OLD_API /* START: TYM_USE_OLD_VTE */

#if GDK_MAJOR_VERSION == 3
#if GDK_MINOR_VERSION >= 20
#define TYM_USE_GDK_SEAT
#endif
#endif

#if VTE_MAJOR_VERSION == 0
#if VTE_MINOR_VERSION >= 48
#define TYM_USE_VTE_SPAWN_ASYNC
#endif
#endif

#if VTE_MAJOR_VERSION == 0
#if VTE_MINOR_VERSION >= 50
#define TYM_USE_VTE_COPY_CLIPBOARD_FORMAT
#endif
#endif

#if VTE_MAJOR_VERSION == 0
#if VTE_MINOR_VERSION >= 46
#define TYM_USE_VTE_COLOR_CURSOR_FOREGROUND
#endif
#endif

#if VTE_MAJOR_VERSION == 0
#if VTE_MINOR_VERSION >= 52
#define TYM_USE_TRANSPARENT
#endif
#endif

#if VTE_MAJOR_VERSION == 0
#if VTE_MINOR_VERSION >= 62
#define TYM_USE_SIXEL
#endif
#endif

#if VTE_MAJOR_VERSION == 0
#if VTE_MINOR_VERSION >= 72
#define TYM_USE_VTE_GET_TEXT_RANGE_FORMAT
#endif
#endif

#endif /* END: TYM_USE_OLD_VTE */


#ifdef DEBUG /* START: DEBUG */
#define dd( fmt, ... ) \
  g_print("[%-10s:%3u I] " fmt "\n", __FILE__, __LINE__, ##__VA_ARGS__)

#define dw( fmt, ... ) \
  g_print("[%-10s:%3u W] " fmt "\n", __FILE__, __LINE__, ##__VA_ARGS__)

#define df( fmt, ... ) \
  g_print("[%-10s:%3u F] %s()\n", __FILE__, __LINE__, __func__)

void debug_dump_stack(lua_State* L, char* file, unsigned line);
#define ds(lua_state) \
  debug_dump_stack((lua_state), __FILE__, __LINE__)

#else /* ELSE: DEBUG */

#define dd(...) ((void)0)
#define dw(...) ((void)0)
#define df(...) ((void)0)
#define ds(...) ((void)0)

#endif /* END: DEBUG */

int roundup(double x);
bool is_equal(const char* a, const char* b);
bool is_none(const char* s);
bool is_empty(const char* s);
void luaX_requirec(lua_State* L, const char* modname, lua_CFunction openf, int glb, void* userdata);
int luaX_warn(lua_State* L, const char* fmt, ...);

#endif
